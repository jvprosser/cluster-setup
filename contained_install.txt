- Open questions

    - Can a processâ€™ non-root effective UID write to a file in /etc/hadoop-conf
- Parameter sections

    - Globals

        - LOG_ROOT=/tvlogs
        - CDH_ROOT=/cloudera

    - cm-agent ( etc/cloudera-scm-agent/config.ini )

            - log_file=/var/log/cloudera-scm-agent/cloudera-scm-agent.log
            - lib_dir=/var/lib/cloudera-scm-agent
            - parcel_dir=/opt/cloudera/parcels
            - agent_wide_credential_cache_location=/var/run/cloudera-scm-agent
            - verify_cert_dir=/opt/cloudera/security/ca-certs/
            - client_key_file=/opt/cloudera/security/x509/key.pem
            - client_cert_file=/opt/cloudera/security/x509/cert.pem

            - ## Location of Hadoop files.  These are the CDH locations when installed by
## packages.  Unused when CDH is installed by parcels.
[Hadoop]
#cdh_crunch_home=/usr/lib/crunch
#cdh_flume_home=/usr/lib/flume-ng
#cdh_hadoop_bin=/usr/bin/hadoop
#cdh_hadoop_home=/usr/lib/hadoop
#cdh_hbase_home=/usr/lib/hbase
#cdh_hbase_indexer_home=/usr/lib/hbase-solr
#cdh_hcat_home=/usr/lib/hive-hcatalog
#cdh_hdfs_home=/usr/lib/hadoop-hdfs
#cdh_hive_home=/usr/lib/hive
#cdh_httpfs_home=/usr/lib/hadoop-httpfs
#cdh_hue_home=/usr/share/hue
#cdh_hue_plugins_home=/usr/lib/hadoop
#cdh_impala_home=/usr/lib/impala
#cdh_llama_home=/usr/lib/llama
#cdh_mr1_home=/usr/lib/hadoop-0.20-mapreduce
#cdh_mr2_home=/usr/lib/hadoop-mapreduce
#cdh_oozie_home=/usr/lib/oozie
#cdh_parquet_home=/usr/lib/parquet
#cdh_pig_home=/usr/lib/pig
#cdh_solr_home=/usr/lib/solr
#cdh_spark_home=/usr/lib/spark
#cdh_sqoop_home=/usr/lib/sqoop
#cdh_sqoop2_home=/usr/lib/sqoop2
#cdh_yarn_home=/usr/lib/hadoop-yarn
#cdh_zookeeper_home=/usr/lib/zookeeper
#hive_default_xml=/etc/hive/conf.dist/hive-default.xml
#webhcat_default_xml=/etc/hive-webhcat/conf.dist/webhcat-default.xml
#jsvc_home=/usr/libexec/bigtop-utils
#tomcat_home=/usr/lib/bigtop-tomcat

            - #mgmt_home=/usr/share/cmf
            - #cloudera_mysql_connector_jar=/usr/share/java/mysql-connector-java.jar
    - Per-cluster
        - cm-agent ( etc/cloudera-scm-agent/config.ini )
        - server_host=localhost
-------------
# prep

  scp -i jp.pem ec2-user@172.31.14.178:centrify-suite-2016.1-rhel4thru7-x86_64.tgz  .
  ssh -i jp.pem ec2-user@172.31.14.178
  yum -y install git emacs screen
  git clone https://github.com/jvprosser/cluster-setup.git

  cd cluster-setup/
  tar xvfz pssh-2.3.1.tar.gz
  mv pssh-2.3.1 ..
  alias jpssh="~/pssh-2.3.1/bin/pssh --timeout=0 --inline-stdout -h ~/hostlist.txt -x '-tt' -X '-oStrictHostKeyChecking=no'"
  alias jpscp="~/pssh-2.3.1/bin/pscp -h ~/hostlist.txt -X '-oStrictHostKeyChecking=no'"
  mv hostlist hostlist.txt
  jpssh ls

add alias commands
  vi ~/.bashrc
  . ~/.bashrc
  jpscp /home/ec2-user/jdk1.7.0_67-cloudera.tgz /tmp/
  jpssh 'mkdir -p /usr/java; cd /usr/java; cp /tmp/jdk1.7.0_67-cloudera.tgz .;tar xvfz jdk1.7.0_67-cloudera.tgz'
  jpssh ls /usr/java
  jpssh ls /usr/java/jdk1.7.0_67-cloudera


# create temporary host file entries for now...
cat <<EOF1 >> ./hosts.txt
172.31.11.34    cm.jprosser.com   cm
172.31.11.35    dn1.jprosser.com  dn1
172.31.11.36    dn2.jprosser.com  dn2
172.31.11.37    dn3.jprosser.com  dn3
172.31.25.97    db.jprosser.com  db
EOF1

# append to /etc/hosts
jpscp ./hosts.txt /tmp/
jpssh 'cat /tmp/hosts.txt >> /etc/hosts'

# packages
# needed for cloudera-scm-server init script
jpssh yum -y install psmisc 


#do this on db server
# SCM requires InnoDb MySQL db engine

  sudo yum install mysql-server
  ls /etc/init.d

  mv /etc/my.cnf /etc/my.cnf_orig

# paste my.cnf contents from git or cloudera docs

# make sure the #innodb_buffer_pool_size isnot too large for your instance. ( 4G default)
# innodb_buffer_pool_size = 512M
# uncomment #cloudera_mysql_connector_jar

  vi /etc/my.cnf
  chkconfig mysqld on
  chkconfig --list | grep my
  service mysqld start
  /usr/bin/mysql_secure_installation

  cp /home/ec2-user/mysql-connector-java-5.1.39.tar.gz .
  tar xvfz mysql-connector-java-5.1.39.tar.gz
  cd mysql-connector-java-5.1.39

#create the cdh db grants
  mysql -u root -p



# this may not be needed
#  links --dump http://archive.cloudera.com/cdh5/cdh/5/ | grep cdh5.7.1 | grep tar.gz | grep http| grep -v src | cut -c 7- > cdh5.7.1-packages.txt
#  more cdh5.7.1-packages.txt
#  for f in [`cat cdh5.7.1-packages.txt`] ; do  wget $f;done

# set up OS on nodes - this will be cooked into AMI.

  jpssh "sed -i -e 's/SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config"
  jpssh "sed -i -e 's/SELINUX=permissive/SELINUX=disabled/' /etc/selinux/config"

  jpssh "echo 'options ipv6 disable=1' >> /etc/modprobe.d/disabled.conf"
  jpssh "echo 'NETWORKING_IPV6=no' >> /etc/sysconfig/network"
  jpssh "echo 'IPV6INIT=no' >> /etc/sysconfig/network"
  jpssh "echo 1 > /proc/sys/net/ipv6/conf/all/disable_ipv6"
  jpssh "echo 1 > /proc/sys/net/ipv6/conf/default/disable_ipv6"
  jpssh "echo -e 'Host *\nUseRoaming no' >> /etc/ssh/ssh_config"
  jpssh "sed -i -e 's/#AddressFamily any/AddressFamily inet/'  /etc/ssh/sshd_config"
  jpssh "cp /etc/rc.local /etc/sysconfig/_rc.local.orig.`date +%d%m%y%H%M%S`"
  jpssh echo "'vm.swappiness = 1' >> /etc/sysctl.conf"

see git repo
cat <<EOF >> ./rc.local
##### CDH Settings ########################################
#disable  THP
echo never > /sys/kernel/mm/redhat_transparent_hugepage/defrag
echo never > /sys/kernel/mm/redhat_transparent_hugepage/enabled
# set RPS settings
# needs advanced network services. run this command to test and look for ixgbevf 
# see http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/enhanced-networking.html#enhanced-networking-linux for ec2
# ethtool -i eth0
# driver: ixgbevf
echo "7f" > /sys/devices/vif-0/net/eth0/queues/rx-0/rps_cpus
# Enable TCP no delay: 
# the TCP stack makes decisions that prefer lower latency as opposed to higher throughput.
echo "1" > /proc/sys/net/ipv4/tcp_low_latency
#############################################
EOF


  vi rc.local
  jpscp rc.local /tmp
  jpssh "cat /tmp/rc.local >> /etc/rc.local
  jpssh "cat /tmp/rc.local >> /etc/rc.local"
  jpssh cat /tmp/rc.local
  jpssh shutdown -r now
  ping 172.31.11.34



#### back to cluster deployment


  wget https://archive.cloudera.com/cm5/cm/5/cloudera-manager-centos7-cm5.7.1_x86_64.tar.gz

  jpscp  cloudera-manager-centos7-cm5.7.1_x86_64.tar.gz /tmp

  jpssh mkdir -p /cloudera/opt/cloudera 

# this is where we will extract the CM tarball for installation
  jpssh mkdir -p /cloudera/opt/cloudera-manager
# this gives us: etc/  lib/  lib64/  log/  run/  sbin/  share/
# which we will move to /cloudera/


  jpssh tar xzf /tmp/cloudera-manager-centos7-cm5.7.1_x86_64.tar.gz -C /cloudera/opt/cloudera-manager/

jpssh "sed -i -e 's/# log_file=\/var\/log/log_file=\/tvlogs/' /cloudera/opt/cloudera-manager/cm-5.7.1/etc/cloudera-scm-agent/config.ini"
jpssh "sed -i -e 's/# lib_dir=/lib_dir=\/cloudera/' /cloudera/opt/cloudera-manager/cm-5.7.1/etc/cloudera-scm-agent/config.ini"
jpssh "sed -i -e 's/# parcel_dir=/parcel_dir=\/cloudera/' /cloudera/opt/cloudera-manager/cm-5.7.1/etc/cloudera-scm-agent/config.ini"

jpssh "sed -i -e 's/# agent_wide_credential_cache_location=/agent_wide_credential_cache_location=\/cloudera/' /cloudera/opt/cloudera-manager/cm-5.7.1/etc/cloudera-scm-agent/config.ini"
jpssh "sed -i -e  's/# verify_cert_dir=/# verify_cert_dir=\/cloudera/' /cloudera/opt/cloudera-manager/cm-5.7.1/etc/cloudera-scm-agent/config.ini"
jpssh "sed -i -e  's/# client_key_file=/# client_key_file=\/cloudera/' /cloudera/opt/cloudera-manager/cm-5.7.1/etc/cloudera-scm-agent/config.ini"
jpssh "sed -i -e 's/# client_cert_file=/# client_cert_file=\/cloudera/' /cloudera/opt/cloudera-manager/cm-5.7.1/etc/cloudera-scm-agent/config.ini"

jpssh "sed -i -e 's/CMF_VAR=\$CMF_ROOT/CMF_VAR=\$CMF_ROOT\/var/' /cloudera/opt/cloudera-manager/cm-5.7.1/etc/default/cloudera-scm-agent"
jpssh "sed -i -e 's/CMF_VAR=\$CMF_ROOT/CMF_VAR=\$CMF_ROOT\/var/' /cloudera/opt/cloudera-manager/cm-5.7.1/etc/default/cloudera-scm-server"
jpssh "sed -i -e 's/export CMF_SUDO_CMD/#export CMF_SUDO_CMD/' /cloudera/opt/cloudera-manager/cm-5.7.1/etc/default/cloudera-scm-server"
jpssh "sed -i -e 's/export CMF_SUDO_CMD/#export CMF_SUDO_CMD/' /cloudera/opt/cloudera-manager/cm-5.7.1/etc/default/cloudera-scm-agent"
jpssh "sed -i -e 's/#USER/USER/' /cloudera/opt/cloudera-manager/cm-5.7.1/etc/default/cloudera-scm-agent"


export CMHOST=cm.jprosser.com
ssh ${CMHOST}  mkdir -p /tvlogs/cloudera-scm-headlamp
ssh ${CMHOST}  mkdir -p /tvlogs/cloudera-scm-firehose
ssh ${CMHOST}  mkdir -p /tvlogs/cloudera-scm-alertpublisher
ssh ${CMHOST}  mkdir -p /tvlogs/cloudera-scm-eventserver
ssh ${CMHOST}  mkdir -p /cloudera/var/lib/cloudera-scm-headlamp
ssh ${CMHOST}  mkdir -p /cloudera/var/lib/cloudera-scm-firehose
ssh ${CMHOST}  mkdir -p /cloudera/var/lib/cloudera-scm-alertpublisher
ssh ${CMHOST}  mkdir -p /cloudera/var/lib/cloudera-scm-eventserver
ssh ${CMHOST}  mkdir -p /cloudera/var/lib/cloudera-scm-server
ssh ${CMHOST}  chown cloudera-scm:cloudera-scm  /tvlogs/cloudera-scm-headlamp
ssh ${CMHOST}  chown cloudera-scm:cloudera-scm  /tvlogs/cloudera-scm-firehose
ssh ${CMHOST}  chown cloudera-scm:cloudera-scm  /tvlogs/cloudera-scm-alertpublisher
ssh ${CMHOST}  chown cloudera-scm:cloudera-scm  /tvlogs/cloudera-scm-eventserver
ssh ${CMHOST}  chown cloudera-scm:cloudera-scm  /cloudera/var/lib/cloudera-scm-headlamp
ssh ${CMHOST}  chown cloudera-scm:cloudera-scm  /cloudera/var/lib/cloudera-scm-firehose
ssh ${CMHOST}  chown cloudera-scm:cloudera-scm  /cloudera/var/lib/cloudera-scm-alertpublisher
ssh ${CMHOST}  chown cloudera-scm:cloudera-scm  /cloudera/var/lib/cloudera-scm-eventserver
ssh ${CMHOST}  chown cloudera-scm:cloudera-scm  /cloudera/var/lib/cloudera-scm-server


# for now we cp, so we can redo if needed.  later we'll mv.
jpssh cp -r /cloudera/opt/cloudera-manager/cm-5.7.1/etc /cloudera/
jpssh cp -r /cloudera/opt/cloudera-manager/cm-5.7.1/lib /cloudera/
jpssh cp -r /cloudera/opt/cloudera-manager/cm-5.7.1/lib64 /cloudera/
jpssh cp -r /cloudera/opt/cloudera-manager/cm-5.7.1/log /cloudera/
jpssh cp -r /cloudera/opt/cloudera-manager/cm-5.7.1/run /cloudera/
jpssh cp -r /cloudera/opt/cloudera-manager/cm-5.7.1/sbin /cloudera/
jpssh cp -r /cloudera/opt/cloudera-manager/cm-5.7.1/share /cloudera/

#This needs to be here for  share/cmf/schema/scm_prepare_database.sh
  jpssh mkdir -p /usr/share/java/
  cd mysql-connector-java-5.1.39
  jpscp mysql-connector-java-5.1.39-bin.jar /usr/share/java/mysql-connector-java.jar

# don't make this homedir it will get moved from the cm tarbal
  jpssh 'useradd --system --home=/cloudera/run/cloudera-scm-server --no-create-home --shell=/bin/false --comment "Cloudera SCM User" cloudera-scm'

  jpssh mkdir -p /cloudera/var

  jpssh mkdir -p  /cloudera/var/lib/cloudera-scm-server
  jpssh chown -R cloudera-scm:cloudera-scm  /cloudera/var/lib/cloudera-scm-server

  jpssh mkdir -p  /cloudera/var/log
  jpssh chown -R cloudera-scm:cloudera-scm  /cloudera/var/log
  jpssh mkdir -p  /tvlogs/cloudera-scm-agent
  jpssh chown  cloudera-scm:cloudera-scm  /tvlogs/cloudera-scm-agent

  ssh cm.jprosser.com mkdir -p  /tvlogs/cloudera-scm-server
  ssh cm.jprosser.com chown  cloudera-scm:cloudera-scm  /tvlogs/cloudera-scm-server

  ssh cm.jprosser.com "ln -s /tvlogs/cloudera-scm-server /cloudera/var/log/cloudera-scm-server"
  jpssh "ln -s /tvlogs/cloudera-scm-agent /cloudera/var/log/cloudera-scm-agent"



# on db host
mysql -u root -p
mysql> grant all on *.* to 'temp'@'%' identified by 'temp' with grant option;

#Run this on cm host
ssh cm.jprosser.com bash -x /cloudera/share/cmf/schema/scm_prepare_database.sh mysql -h db.jprosser.com   -utemp -ptemp --scm-host cm.jprosser.com scm scm scm

jpssh mkdir  mkdir -p /cloudera/opt/cloudera/parcel-repo
jpssh chown cloudera-scm:cloudera-scm /cloudera/opt/cloudera/parcel-repo

jpssh mkdir -p /cloudera/opt/cloudera/parcels
jpssh chown cloudera-scm:cloudera-scm /cloudera/opt/cloudera/parcels

jpssh chown -R cloudera-scm:cloudera-scm  /cloudera

# TODO create .bashrc in ~cloudera-scm/ and set thes env vars:
# export CMF_ROOT=/cloudera
# export CMF_VAR=${CMF_ROOT}/var
sudo -u cloudera-scm /cloudera/etc/init.d/cloudera-scm-server start

#to run on startup 
cp /cloudera/etc/init.d/cloudera-scm-server /etc/init.d/cloudera-scm-server
 chkconfig cloudera-scm-server on

