#!/bin/bash

# retrieve JCEUnlimitedEncryption.zip from
# http://www.oracle.com/technetwork/java/javase/downloads/jce-7-download-432124.html
# upload it to your launch node and unzip it.

#install pssh-2.3.1 - git clone http://code.google.com/p/parallel-ssh/
# enable password less login on all nodes e.g. 
scp -r .ssh/  Nodes[1-N].vpc.jpmorgan.com:
  
# or https://pypi.python.org/pypi/pssh/2.3.1
alias jpssh="~/pssh-2.3.1/bin/pssh --timeout=0 --inline-stdout -h ~/hostlist.txt -x '-tt' -X '-oStrictHostKeyChecking=no'" 
alias jpscp="~/pssh-2.3.1/bin/pscp -h ~/hostlist.txt -X '-oStrictHostKeyChecking=no'"

yum remove openjdk

sudo yum -y install git emacs mysql telnet wireshark tcpdump screen lynx links lsof 
sudo yum -y install krb5-workstation krb5-libs openldap-clients

# certtoolkit
yum -y install python-pip 
pip install beautifulsoup4 cm_api paramiko pyyaml requests_ntlm
wget http://github.mtv.cloudera.com/CertTeam/CertToolkit/archive/master.zip

echo "Setting up cloudera repos"
wget https://archive.cloudera.com/cm5/redhat/7/x86_64/cm/cloudera-manager.repo
mv cloudera-manager.repo /etc/yum.repos.d/

ls /etc/yum.repos.d/

echo "Installing cloudera manager stuff"
sudo yum -y install cloudera-manager-daemons 
sudo yum -y install cloudera-manager-server

# do a yum -list | grep -i cloudera to get a list of java packages that come with the CLoudera disto.

echo "install JDK"
wget --no-cookies --no-check-certificate --header "Cookie: oraclelicense=accept-securebackup-cookie" "http://download.oracle.com/otn-pub/java/jdk/8u60-b27/jdk-8u60-linux-x64.rpm" -O jdk-8-linux-x64.rpm

echo "get maven"
wget http://mirrors.sonic.net/apache/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz
tar xvf apache-maven-3.3.9-bin.tar.gz
mv apache-maven-3.3.9 /usr/local/bin

echo "set up JAVA ENVS"
export JAVA_HOME=/usr/java/latest
export PATH=$JAVA_HOME/bin:$PATH:/usr/local/bin/apache-maven-3.3.9/bin

echo "export JAVA_HOME=/usr/java/latest" >> ~/.bashrc   
echo "export PATH=$JAVA_HOME/bin:$PATH:/usr/local/bin/apache-maven-3.3.9/bin" >> ~/.bashrc

echo "get sql connector"
wget "http://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.41.tar.gz"
gunzip  ./mysql-connector-java-5.1.41.tar.gz 
tar xvf  ./mysql-connector-java-5.1.41.tar  mysql-connector-java-5.1.41/mysql-connector-java-5.1.41-bin.jar

# is this path created as a logical link using alternatives?
mkdir -p /usr/share/java/
sudo bash -c "cp /home/ec2-user/mysql-connector-java-5.1.38/mysql-connector-java-5.1.38-bin.jar /usr/share/java/mysql-connector-java.jar"

mkdir /var/log/mysql/
chown -R mysql:mysql /var/log/mysql/
mkdir /var/run/mysql
chown -R mysql:mysql /var/run/mysql
systemctl start  mariadb
# 
# #mysql> grant all on *.* to 'temp'@'%' identified by 'temp' with grant option;
# 
# # the doc didn't work on RDS. I had to use:
# 
# GRANT ALL PRIVILEGES ON `%`.* TO temp@'%' IDENTIFIED BY 'temp' WITH GRANT OPTION;
# 
# #this is a workaround if using rds as the store
# GRANT ALL PRIVILEGES ON `%`.* TO scm@'%' IDENTIFIED BY 'scm' WITH GRANT OPTION;
# 
# #  On the Cloudera Manager Server host (myhost2), run the script:
# 
# /usr/share/cmf/schema/scm_prepare_database.sh mysql -h cloudera.cfuzrvhqdmqv.us-west-2.rds.amazonaws.com -u temp -ptemp --scm-host ip-10-227-56-46.us-west-2.compute.internal  scm scm scm
# 
# mysql> drop user 'temp'@'%';
# 
# mv /etc/cloudera-scm-server/db.mgmt.properties /tmp/
